apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-minion
  namespace: default
  labels: &labels
    app: kafka-minion
    type: openmetrics
spec:
  replicas: 1
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: /metrics
    spec:
      containers:
      - name: kafka-minion
        image: solsson/kafka-consumers-prometheus@sha256:4fb3e8bd5e70f14cbb9168d3259f7a7b601a1cf9af29f88ad239bc5d7e43ee30
        env:
        - name: TELEMETRY_HOST
          value: 0.0.0.0
        - name: TELEMETRY_PORT
          value: "8080"
        - name: EXPORTER_IGNORE_SYSTEM_TOPICS
          value: "true"
        - name: EXPORTER_METRICS_PREFIX
          value: kafka_minion
        - name: LOG_LEVEL
          value: info
        - name: KAFKA_BROKERS
          value: bootstrap:9092
        - name: KAFKA_CONSUMER_OFFSETS_TOPIC_NAME
          value: __consumer_offsets
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            port: http
            path: /readycheck
        livenessProbe:
          httpGet:
            port: http
            path: /healthcheck
